math.randomseed(socket.gettime()*10000)
local datos = require("main.datos")
local cada_cuanto_naranja
local contador_naranjas = 0
local ultimo_numero_random
--

local function cada_cuanto_random()
	cada_cuanto_naranja = math.random(3, 6)
end
local function crear_enemigo()
	if not datos.game_over then
		contador_naranjas = contador_naranjas + 1;
		if contador_naranjas >= cada_cuanto_naranja then
			if ultimo_numero_random == 1 then 
				ultimo_numero_random = 2
			else
				ultimo_numero_random = 1
			end
			collectionfactory.create("#NARANJA", vmath.vector3(), vmath.quat(), {[hash("/collision")] = {velocidad = 400, naranja = true, numero_random = ultimo_numero_random}})
			contador_naranjas = 0;
			cada_cuanto_random();
		else
			ultimo_numero_random = math.random(1, 2)
			collectionfactory.create("#enemigos_cf", vmath.vector3(), vmath.quat(), {[hash("/collision")] = {velocidad = 280, naranja = false, numero_random = ultimo_numero_random}})
		end
	end
end
function init(self)	
	cada_cuanto_random();
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)

end

function fixed_update(self, dt)
	-- This function is only called if 'Use Fixed Timestep' is enabled in the Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("empezar_juego") then
		print("empezar a crear enemeigos")
		--timer.delay(1.15, true, crear_enemigo) -- 1.25?
	end
end

function on_input(self, action_id, action)

end

