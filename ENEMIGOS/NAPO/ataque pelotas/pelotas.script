local datos = require("main.datos")
local velocidad = 200;
local pos_player
-- funcs
local parpadeo_pelota
local cancelar_parpadeo
-- hashes
local respuesta_t = hash("trigger_response")
local bija_t = hash("bija")
--
go.property("parent", msg.url())
go.property("mi_id", msg.url())
go.property("sprite")
go.property("cuenta_pelotas", 0)
go.property("color_pelota", 0)
function init(self)
	if datos.juego_ganado or datos.game_over then
		go.delete(".", true)
		return
	end
	-- vars
	self.direccion = 0;
	-- Posicion inicial de la pelota
	local pos = go.get_position(self.mi_id)
	go.set_position(vmath.vector3(pos.x - 50, pos.y + 90, 1))
	-- Parpadero inicial
	self.sprite = msg.url(nil, go.get_id(), "sprite")
	parpadeo_pelota(self)
	
	-- COLOR pelota
	if self.color_pelota == 1 then
		sprite.play_flipbook(self.sprite, "green")
		self.pelotazo = true;
	end
	-- Collision pelota
	self.enemigo = msg.url(nil, go.get_id(), "enemigo")
	self.pelota = msg.url(nil, go.get_id(), "pelota")
	msg.post(self.enemigo, "disable")
	msg.post(self.pelota, "disable")
	-- flag sonido
	self.reproduciendo_sonido = false;
	-- rotacion
	go.animate(go.get_id(), "euler.z" , go.PLAYBACK_LOOP_BACKWARD, 360, go.EASING_LINEAR, 3.5)
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local pos = go.get_position(self.mi_id)
	pos.x = pos.x + 5 * velocidad * self.direccion * dt
	go.set_position(pos)

	local pos_player = datos.player_pos;
	if pos.x < pos_player.x - 500 then
		go.delete(".", true)
		--print("Eliminar pelota")
	end
end

local function pelotazo_napo(self)
	local napo_pos = go.get_position(self.parent)
	napo_pos.y = napo_pos.y + 300;
	napo_pos.x = napo_pos.x + 20;
	msg.post(self.parent, "perder_vida")
	go.animate(go.get_id(), "position", go.PLAYBACK_ONCE_FORWARD, napo_pos, go.EASING_LINEAR, 0.35, 0,
	function()
		msg.post(self.parent, "animar_golpe")
		go.delete(".", true)
	end)
end

function on_message(self, message_id, message, sender)
	if message_id == respuesta_t then
		if message.enter and message.other_group == bija_t and self.pelotazo then
			sound.play("#sound_copa", {gain = 0.5})
			self.direccion = 0;
			pelotazo_napo(self)
			--print("Responder con bijazo")
			return
		elseif message.enter and message.other_group == hash("player") and not self.reproduciendo_sonido then
				self.reproduciendo_sonido = true;
				sound.play("#sound_cuerpo", {gain = 0.5})
		end
	end	
end
parpadeo_pelota = function(self)
	go.animate(self.sprite, "tint.w", go.PLAYBACK_LOOP_BACKWARD, 0.1, go.EASING_LINEAR, 0.25)
	timer.delay(1.5, false, cancelar_parpadeo)
end

local function chequeo_enemigo_o_pelotas(self)
	if self.color_pelota ~= 1 then
		msg.post(self.enemigo, "enable")
		else
		msg.post(self.pelota, "enable")
	end
end

cancelar_parpadeo = function(self)
	go.set(self.sprite, "tint.w", 1)
	go.cancel_animations(self.sprite)
	self.direccion = -1;
	chequeo_enemigo_o_pelotas(self);
	if self.cuenta_pelotas >= 3 then
		return
	else
		if datos.game_over == false and datos.juego_ganado == false then
			msg.post(self.parent, "crear_nueva_pelota")
		end
	end
end


