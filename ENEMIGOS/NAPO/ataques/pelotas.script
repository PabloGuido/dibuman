local datos = require("main.datos")
local velocidad = 200;
local pos_player
-- funcs
local parpadeo_pelota
local cancelar_parpadeo
--
go.property("parent", msg.url())
go.property("mi_id", msg.url())
go.property("sprite")
go.property("cuenta_pelotas", 0)
go.property("color_pelota", 0)
function init(self)
	-- vars
	self.direccion = 0;
	-- Posicion inicial de la pelota
	local pos = go.get_position(self.mi_id)
	go.set_position(vmath.vector3(pos.x - 50, pos.y + 90, 1))
	-- Parpadero inicial
	self.sprite = msg.url(nil, go.get_id(), "sprite")
	parpadeo_pelota(self)

	
	-- COLOR pelota
	if self.color_pelota == 1 then
		sprite.play_flipbook(self.sprite, "green")
	end
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local pos = go.get_position(self.mi_id)
	pos.x = pos.x + 5 * velocidad * self.direccion * dt
	go.set_position(pos)

	local pos_player = datos.player_pos;
	if pos.x < pos_player.x - 500 then
		go.delete(".", true)
		--print("Eliminar pelota")
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end
parpadeo_pelota = function(self)
	go.animate(self.sprite, "tint.w", go.PLAYBACK_LOOP_BACKWARD, 0.1, go.EASING_LINEAR, 0.25)
	timer.delay(1.5, false, cancelar_parpadeo)
end

cancelar_parpadeo = function(self)
	go.set(self.sprite, "tint.w", 1)
	go.cancel_animations(self.sprite)
	self.direccion = -1;
	if self.cuenta_pelotas >= 3 then
		return
	else
		msg.post(self.parent, "crear_nueva_pelota")
	end
end
