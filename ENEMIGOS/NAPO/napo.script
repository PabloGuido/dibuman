math.randomseed(socket.gettime()*10000)
-- props
go.property("pos_player", 0)
-- vars
local parent_url;
local vidas = 2;
-- ataque pelotas
local cuenta_pelotas = 0;
local pelotas_tabla = {};
pelotas_tabla[1] = {1,0,0}
pelotas_tabla[2] = {0,1,0}
pelotas_tabla[3] = {0,0,1}
local orden_pelotas;
local necesita_nuevo_orden_pelotas = true;
-- funcs
local ataque_pelotas
function init(self)
	parent_url = msg.url()
	msg.post("#collisionobject", "disable")
	local pos = go.get_position()
	go.animate("NAPO", "position.x", go.PLAYBACK_ONCE_FORWARD, self.pos_player + 690, go.EASING_LINEAR, 1, 0,
	function()
		msg.post("/player/player", "acquire_input_focus")
		msg.post("#collisionobject", "enable")
		ataque_pelotas(self)
	end)

end

local function pelota_color_random()
	if necesita_nuevo_orden_pelotas then
		math.randomseed(socket.gettime()*10000)
		necesita_nuevo_orden_pelotas = false;
		orden_pelotas = pelotas_tabla[math.random(1,3)] -- Determina cual de las tres pelotas es verde.
		pprint(orden_pelotas)
	end
end

local function reseteo_ataque_pelotas(self)
	if cuenta_pelotas >= 3 then
		cuenta_pelotas = 0;
		necesita_nuevo_orden_pelotas = true;
		timer.delay(3, false, ataque_pelotas)
	end
end

ataque_pelotas = function(self)
	pelota_color_random()
	cuenta_pelotas = cuenta_pelotas + 1
	local pelota = factory.create("ataques#ataque_pelotas", nil, nil, 
	{parent = parent_url,
	mi_id = pelota,
	cuenta_pelotas = cuenta_pelotas,
	color_pelota = orden_pelotas[cuenta_pelotas]})
	--
	reseteo_ataque_pelotas(self)
end

perder_vida = function()
	vidas = vidas - 1;
	if vidas <= 0 then
		print("Napo: 0 vidas.");
	end
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end


function on_message(self, message_id, message, sender)
	if message_id == hash("crear_nueva_pelota") then
		print("crear nueva pelota")
		ataque_pelotas(self)
	elseif message_id == hash("perder_vida") then
		perder_vida();
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
